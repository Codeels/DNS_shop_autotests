{"uid":"3c4cb43bc9a9095d","name":"Тест 2","fullName":"test#test_2","historyId":"1c850b33d69e6873347bfffed97fc0d5","time":{"start":1679243721070,"stop":1679243721070,"duration":0},"description":"Тест 2","descriptionHtml":"<p>Тест 2</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55865f447243 <unknown>\n#1 0x55865f20b7a6 <unknown>\n#2 0x55865f234520 <unknown>\n#3 0x55865f23049b <unknown>\n#4 0x55865f2722a7 <unknown>\n#5 0x55865f2718cf <unknown>\n#6 0x55865f268e53 <unknown>\n#7 0x55865f23b9ea <unknown>\n#8 0x55865f23cb2e <unknown>\n#9 0x55865f49bd5e <unknown>\n#10 0x55865f49fa80 <unknown>\n#11 0x55865f4818b0 <unknown>\n#12 0x55865f4a0b63 <unknown>\n#13 0x55865f472f75 <unknown>\n#14 0x55865f4c3998 <unknown>\n#15 0x55865f4c3b27 <unknown>\n#16 0x55865f4dec23 <unknown>\n#17 0x7ff268606b43 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    def driver():\n        print(\"\\nbrowser open\")\n        link = \"https://www.dns-shop.ru/\"\n>       driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))\n\nconftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py:81: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py:106: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:288: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:381: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4ba2588310>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55865f4c3b27 \\\\u003Cunknown>\\\\n#16 0x55865f4dec23 \\\\u003Cunknown>\\\\n#17 0x7ff268606b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55865f447243 <unknown>\nE       #1 0x55865f20b7a6 <unknown>\nE       #2 0x55865f234520 <unknown>\nE       #3 0x55865f23049b <unknown>\nE       #4 0x55865f2722a7 <unknown>\nE       #5 0x55865f2718cf <unknown>\nE       #6 0x55865f268e53 <unknown>\nE       #7 0x55865f23b9ea <unknown>\nE       #8 0x55865f23cb2e <unknown>\nE       #9 0x55865f49bd5e <unknown>\nE       #10 0x55865f49fa80 <unknown>\nE       #11 0x55865f4818b0 <unknown>\nE       #12 0x55865f4a0b63 <unknown>\nE       #13 0x55865f472f75 <unknown>\nE       #14 0x55865f4c3998 <unknown>\nE       #15 0x55865f4c3b27 <unknown>\nE       #16 0x55865f4dec23 <unknown>\nE       #17 0x7ff268606b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:249: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1679243721070,"stop":1679243721855,"duration":785},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55865f447243 <unknown>\n#1 0x55865f20b7a6 <unknown>\n#2 0x55865f234520 <unknown>\n#3 0x55865f23049b <unknown>\n#4 0x55865f2722a7 <unknown>\n#5 0x55865f2718cf <unknown>\n#6 0x55865f268e53 <unknown>\n#7 0x55865f23b9ea <unknown>\n#8 0x55865f23cb2e <unknown>\n#9 0x55865f49bd5e <unknown>\n#10 0x55865f49fa80 <unknown>\n#11 0x55865f4818b0 <unknown>\n#12 0x55865f4a0b63 <unknown>\n#13 0x55865f472f75 <unknown>\n#14 0x55865f4c3998 <unknown>\n#15 0x55865f4c3b27 <unknown>\n#16 0x55865f4dec23 <unknown>\n#17 0x7ff268606b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/_pytest/fixtures.py\", line 900, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/DNS_shop_autotests/DNS_shop_autotests/conftest.py\", line 29, in driver\n    driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py\", line 81, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py\", line 106, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 288, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 381, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Тест 2","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55865f447243 <unknown>\n#1 0x55865f20b7a6 <unknown>\n#2 0x55865f234520 <unknown>\n#3 0x55865f23049b <unknown>\n#4 0x55865f2722a7 <unknown>\n#5 0x55865f2718cf <unknown>\n#6 0x55865f268e53 <unknown>\n#7 0x55865f23b9ea <unknown>\n#8 0x55865f23cb2e <unknown>\n#9 0x55865f49bd5e <unknown>\n#10 0x55865f49fa80 <unknown>\n#11 0x55865f4818b0 <unknown>\n#12 0x55865f4a0b63 <unknown>\n#13 0x55865f472f75 <unknown>\n#14 0x55865f4c3998 <unknown>\n#15 0x55865f4c3b27 <unknown>\n#16 0x55865f4dec23 <unknown>\n#17 0x7ff268606b43 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    def driver():\n        print(\"\\nbrowser open\")\n        link = \"https://www.dns-shop.ru/\"\n>       driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))\n\nconftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py:81: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py:106: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:288: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:381: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4ba2588310>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#15 0x55865f4c3b27 \\\\u003Cunknown>\\\\n#16 0x55865f4dec23 \\\\u003Cunknown>\\\\n#17 0x7ff268606b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55865f447243 <unknown>\nE       #1 0x55865f20b7a6 <unknown>\nE       #2 0x55865f234520 <unknown>\nE       #3 0x55865f23049b <unknown>\nE       #4 0x55865f2722a7 <unknown>\nE       #5 0x55865f2718cf <unknown>\nE       #6 0x55865f268e53 <unknown>\nE       #7 0x55865f23b9ea <unknown>\nE       #8 0x55865f23cb2e <unknown>\nE       #9 0x55865f49bd5e <unknown>\nE       #10 0x55865f49fa80 <unknown>\nE       #11 0x55865f4818b0 <unknown>\nE       #12 0x55865f4a0b63 <unknown>\nE       #13 0x55865f472f75 <unknown>\nE       #14 0x55865f4c3998 <unknown>\nE       #15 0x55865f4c3b27 <unknown>\nE       #16 0x55865f4dec23 <unknown>\nE       #17 0x7ff268606b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:249: WebDriverException","steps":[],"attachments":[{"uid":"c9cbb2640010e723","name":"stdout","source":"c9cbb2640010e723.txt","type":"text/plain","size":42}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[],"labels":[{"name":"tag","value":"flaky(reruns=2, reruns_delay=5)"},{"name":"suite","value":"test"},{"name":"host","value":"fv-az1135-149"},{"name":"thread","value":"2424-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ace54ba519dbab7e","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5630babc0243 <unknown>\n#1 0x5630ba9847a6 <unknown>\n#2 0x5630ba9ad520 <unknown>\n#3 0x5630ba9a949b <unknown>\n#4 0x5630ba9eb2a7 <unknown>\n#5 0x5630ba9ea8cf <unknown>\n#6 0x5630ba9e1e53 <unknown>\n#7 0x5630ba9b49ea <unknown>\n#8 0x5630ba9b5b2e <unknown>\n#9 0x5630bac14d5e <unknown>\n#10 0x5630bac18a80 <unknown>\n#11 0x5630babfa8b0 <unknown>\n#12 0x5630bac19b63 <unknown>\n#13 0x5630babebf75 <unknown>\n#14 0x5630bac3c998 <unknown>\n#15 0x5630bac3cb27 <unknown>\n#16 0x5630bac57c23 <unknown>\n#17 0x7f6291253b43 <unknown>","time":{"start":1679243715224,"stop":1679243715224,"duration":0}},{"uid":"473061851c970e42","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bdf686f243 <unknown>\n#1 0x55bdf66337a6 <unknown>\n#2 0x55bdf665c520 <unknown>\n#3 0x55bdf665849b <unknown>\n#4 0x55bdf669a2a7 <unknown>\n#5 0x55bdf66998cf <unknown>\n#6 0x55bdf6690e53 <unknown>\n#7 0x55bdf66639ea <unknown>\n#8 0x55bdf6664b2e <unknown>\n#9 0x55bdf68c3d5e <unknown>\n#10 0x55bdf68c7a80 <unknown>\n#11 0x55bdf68a98b0 <unknown>\n#12 0x55bdf68c8b63 <unknown>\n#13 0x55bdf689af75 <unknown>\n#14 0x55bdf68eb998 <unknown>\n#15 0x55bdf68ebb27 <unknown>\n#16 0x55bdf6906c23 <unknown>\n#17 0x7f8dc2a92b43 <unknown>","time":{"start":1679243709391,"stop":1679243709391,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"b61b0b7dcd5fe1e1","reportUrl":"https://Codeels.github.io/DNS_shop_autotests/7//#testresult/b61b0b7dcd5fe1e1","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557b365bf243 <unknown>\n#1 0x557b363837a6 <unknown>\n#2 0x557b363c064d <unknown>\n#3 0x557b363c0761 <unknown>\n#4 0x557b363fbda4 <unknown>\n#5 0x557b363e10ad <unknown>\n#6 0x557b363f9932 <unknown>\n#7 0x557b363e0e53 <unknown>\n#8 0x557b363b39ea <unknown>\n#9 0x557b363b4b2e <unknown>\n#10 0x557b36613d5e <unknown>\n#11 0x557b36617a80 <unknown>\n#12 0x557b365f98b0 <unknown>\n#13 0x557b36618b63 <unknown>\n#14 0x557b365eaf75 <unknown>\n#15 0x557b3663b998 <unknown>\n#16 0x557b3663bb27 <unknown>\n#17 0x557b36656c23 <unknown>\n#18 0x7f66919a4b43 <unknown>","time":{"start":1679234695253,"stop":1679234710510,"duration":15257}}]},"tags":["flaky(reruns=2, reruns_delay=5)"]},"source":"3c4cb43bc9a9095d.json","parameterValues":[]}