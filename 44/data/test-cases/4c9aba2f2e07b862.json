{"uid":"4c9aba2f2e07b862","name":"Тест 3","fullName":"test#test_3","historyId":"1f79a7926d2bb1598ac0f050be41a1b4","time":{"start":1680473527518,"stop":1680473565338,"duration":37820},"description":"Тест 3","descriptionHtml":"<p>Тест 3</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"compare-checkbox\">...</span> is not clickable at point (742, 16). Other element would receive the click: <input class=\"presearch__input\" name=\"q\" type=\"search\" enterkeyhint=\"search\" placeholder=\"Поиск по сайту\" autocomplete=\"off\" data-input=\"input-in-focus\">\n  (Session info: headless chrome=111.0.5563.110)\nStacktrace:\n#0 0x564f2554a243 <unknown>\n#1 0x564f2530e7a6 <unknown>\n#2 0x564f2535248f <unknown>\n#3 0x564f253503e6 <unknown>\n#4 0x564f2534dc9e <unknown>\n#5 0x564f2534cd18 <unknown>\n#6 0x564f25340a65 <unknown>\n#7 0x564f2536c082 <unknown>\n#8 0x564f253402e3 <unknown>\n#9 0x564f2536c24e <unknown>\n#10 0x564f25384932 <unknown>\n#11 0x564f2536be53 <unknown>\n#12 0x564f2533e9ea <unknown>\n#13 0x564f2533fb2e <unknown>\n#14 0x564f2559ed5e <unknown>\n#15 0x564f255a2a80 <unknown>\n#16 0x564f255848b0 <unknown>\n#17 0x564f255a3b63 <unknown>\n#18 0x564f25575f75 <unknown>\n#19 0x564f255c6998 <unknown>\n#20 0x564f255c6b27 <unknown>\n#21 0x564f255e1c23 <unknown>\n#22 0x7fb1c7363b43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aec41c987aaf952894320ffe57dcdecb\")>\n\n    @allure.title(\"Тест 3\")\n    @allure.description('Тест 3')\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    def test_3(driver):\n        # авторизация\n        mp = MainPage(driver)\n        mp.log_in(login, password, main=True)\n    \n        # очистка корзины и страницы сравнения от товаров\n        mp.clear_cart_and_comparison(driver, CartPage, ComparisonPage)\n    \n        # переход на страницу с товарами\n        mp = MainPage(driver)\n        mp.go_to_cpus()\n        catalog = CatalogPage(driver)\n    \n        # фильтрация товаров по параметрам\n        catalog.set_stock()\n        catalog.set_price(*price)\n        catalog.set_brand(*brand)\n        catalog.set_cores(*cores)\n        catalog.set_internal_graphics(*internal_graphics)\n        catalog.set_ram(*ram)\n        catalog.click_button_submit()\n    \n        # сравнение параметров товаров из каталога и страницы сравнения\n>       catalog.get_product_info_and_check_catalog_compare()\n\ntest.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:373: in get_product_info_and_check_catalog_compare\n    catalog.click_button_product1_compare()\npages/catalog_page.py:288: in click_button_product1_compare\n    self.get_button_product1_compare().click()\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f940a5d00>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564f255c6b27 \\\\u003Cunknown>\\\\n#21 0x564f255e1c23 \\\\u003Cunknown>\\\\n#22 0x7fb1c7363b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"compare-checkbox\">...</span> is not clickable at point (742, 16). Other element would receive the click: <input class=\"presearch__input\" name=\"q\" type=\"search\" enterkeyhint=\"search\" placeholder=\"Поиск по сайту\" autocomplete=\"off\" data-input=\"input-in-focus\">\nE         (Session info: headless chrome=111.0.5563.110)\nE       Stacktrace:\nE       #0 0x564f2554a243 <unknown>\nE       #1 0x564f2530e7a6 <unknown>\nE       #2 0x564f2535248f <unknown>\nE       #3 0x564f253503e6 <unknown>\nE       #4 0x564f2534dc9e <unknown>\nE       #5 0x564f2534cd18 <unknown>\nE       #6 0x564f25340a65 <unknown>\nE       #7 0x564f2536c082 <unknown>\nE       #8 0x564f253402e3 <unknown>\nE       #9 0x564f2536c24e <unknown>\nE       #10 0x564f25384932 <unknown>\nE       #11 0x564f2536be53 <unknown>\nE       #12 0x564f2533e9ea <unknown>\nE       #13 0x564f2533fb2e <unknown>\nE       #14 0x564f2559ed5e <unknown>\nE       #15 0x564f255a2a80 <unknown>\nE       #16 0x564f255848b0 <unknown>\nE       #17 0x564f255a3b63 <unknown>\nE       #18 0x564f25575f75 <unknown>\nE       #19 0x564f255c6998 <unknown>\nE       #20 0x564f255c6b27 <unknown>\nE       #21 0x564f255e1c23 <unknown>\nE       #22 0x7fb1c7363b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1680473525707,"stop":1680473527517,"duration":1810},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Тест 3","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"compare-checkbox\">...</span> is not clickable at point (742, 16). Other element would receive the click: <input class=\"presearch__input\" name=\"q\" type=\"search\" enterkeyhint=\"search\" placeholder=\"Поиск по сайту\" autocomplete=\"off\" data-input=\"input-in-focus\">\n  (Session info: headless chrome=111.0.5563.110)\nStacktrace:\n#0 0x564f2554a243 <unknown>\n#1 0x564f2530e7a6 <unknown>\n#2 0x564f2535248f <unknown>\n#3 0x564f253503e6 <unknown>\n#4 0x564f2534dc9e <unknown>\n#5 0x564f2534cd18 <unknown>\n#6 0x564f25340a65 <unknown>\n#7 0x564f2536c082 <unknown>\n#8 0x564f253402e3 <unknown>\n#9 0x564f2536c24e <unknown>\n#10 0x564f25384932 <unknown>\n#11 0x564f2536be53 <unknown>\n#12 0x564f2533e9ea <unknown>\n#13 0x564f2533fb2e <unknown>\n#14 0x564f2559ed5e <unknown>\n#15 0x564f255a2a80 <unknown>\n#16 0x564f255848b0 <unknown>\n#17 0x564f255a3b63 <unknown>\n#18 0x564f25575f75 <unknown>\n#19 0x564f255c6998 <unknown>\n#20 0x564f255c6b27 <unknown>\n#21 0x564f255e1c23 <unknown>\n#22 0x7fb1c7363b43 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aec41c987aaf952894320ffe57dcdecb\")>\n\n    @allure.title(\"Тест 3\")\n    @allure.description('Тест 3')\n    @pytest.mark.flaky(reruns=2, reruns_delay=5)\n    def test_3(driver):\n        # авторизация\n        mp = MainPage(driver)\n        mp.log_in(login, password, main=True)\n    \n        # очистка корзины и страницы сравнения от товаров\n        mp.clear_cart_and_comparison(driver, CartPage, ComparisonPage)\n    \n        # переход на страницу с товарами\n        mp = MainPage(driver)\n        mp.go_to_cpus()\n        catalog = CatalogPage(driver)\n    \n        # фильтрация товаров по параметрам\n        catalog.set_stock()\n        catalog.set_price(*price)\n        catalog.set_brand(*brand)\n        catalog.set_cores(*cores)\n        catalog.set_internal_graphics(*internal_graphics)\n        catalog.set_ram(*ram)\n        catalog.click_button_submit()\n    \n        # сравнение параметров товаров из каталога и страницы сравнения\n>       catalog.get_product_info_and_check_catalog_compare()\n\ntest.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:373: in get_product_info_and_check_catalog_compare\n    catalog.click_button_product1_compare()\npages/catalog_page.py:288: in click_button_product1_compare\n    self.get_button_product1_compare().click()\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5f940a5d00>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564f255c6b27 \\\\u003Cunknown>\\\\n#21 0x564f255e1c23 \\\\u003Cunknown>\\\\n#22 0x7fb1c7363b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"compare-checkbox\">...</span> is not clickable at point (742, 16). Other element would receive the click: <input class=\"presearch__input\" name=\"q\" type=\"search\" enterkeyhint=\"search\" placeholder=\"Поиск по сайту\" autocomplete=\"off\" data-input=\"input-in-focus\">\nE         (Session info: headless chrome=111.0.5563.110)\nE       Stacktrace:\nE       #0 0x564f2554a243 <unknown>\nE       #1 0x564f2530e7a6 <unknown>\nE       #2 0x564f2535248f <unknown>\nE       #3 0x564f253503e6 <unknown>\nE       #4 0x564f2534dc9e <unknown>\nE       #5 0x564f2534cd18 <unknown>\nE       #6 0x564f25340a65 <unknown>\nE       #7 0x564f2536c082 <unknown>\nE       #8 0x564f253402e3 <unknown>\nE       #9 0x564f2536c24e <unknown>\nE       #10 0x564f25384932 <unknown>\nE       #11 0x564f2536be53 <unknown>\nE       #12 0x564f2533e9ea <unknown>\nE       #13 0x564f2533fb2e <unknown>\nE       #14 0x564f2559ed5e <unknown>\nE       #15 0x564f255a2a80 <unknown>\nE       #16 0x564f255848b0 <unknown>\nE       #17 0x564f255a3b63 <unknown>\nE       #18 0x564f25575f75 <unknown>\nE       #19 0x564f255c6998 <unknown>\nE       #20 0x564f255c6b27 <unknown>\nE       #21 0x564f255e1c23 <unknown>\nE       #22 0x7fb1c7363b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:249: ElementClickInterceptedException","steps":[{"name":"Авторизация","time":{"start":1680473527518,"stop":1680473535831,"duration":8313},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Очистка корзины и страницы сравнения","time":{"start":1680473535831,"stop":1680473547007,"duration":11176},"status":"passed","steps":[{"name":"Переход в корзину","time":{"start":1680473535831,"stop":1680473540155,"duration":4324},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Переход к странице с процессорами","time":{"start":1680473547007,"stop":1680473554989,"duration":7982},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Применение фильтров","time":{"start":1680473561310,"stop":1680473563950,"duration":2640},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Проверка названия, цены и ссылки товара","time":{"start":1680473563950,"stop":1680473565336,"duration":1386},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class=\"compare-checkbox\">...</span> is not clickable at point (742, 16). Other element would receive the click: <input class=\"presearch__input\" name=\"q\" type=\"search\" enterkeyhint=\"search\" placeholder=\"Поиск по сайту\" autocomplete=\"off\" data-input=\"input-in-focus\">\n  (Session info: headless chrome=111.0.5563.110)\nStacktrace:\n#0 0x564f2554a243 <unknown>\n#1 0x564f2530e7a6 <unknown>\n#2 0x564f2535248f <unknown>\n#3 0x564f253503e6 <unknown>\n#4 0x564f2534dc9e <unknown>\n#5 0x564f2534cd18 <unknown>\n#6 0x564f25340a65 <unknown>\n#7 0x564f2536c082 <unknown>\n#8 0x564f253402e3 <unknown>\n#9 0x564f2536c24e <unknown>\n#10 0x564f25384932 <unknown>\n#11 0x564f2536be53 <unknown>\n#12 0x564f2533e9ea <unknown>\n#13 0x564f2533fb2e <unknown>\n#14 0x564f2559ed5e <unknown>\n#15 0x564f255a2a80 <unknown>\n#16 0x564f255848b0 <unknown>\n#17 0x564f255a3b63 <unknown>\n#18 0x564f25575f75 <unknown>\n#19 0x564f255c6998 <unknown>\n#20 0x564f255c6b27 <unknown>\n#21 0x564f255e1c23 <unknown>\n#22 0x7fb1c7363b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/DNS_shop_autotests/DNS_shop_autotests/pages/catalog_page.py\", line 373, in get_product_info_and_check_catalog_compare\n    catalog.click_button_product1_compare()\n  File \"/home/runner/work/DNS_shop_autotests/DNS_shop_autotests/pages/catalog_page.py\", line 288, in click_button_product1_compare\n    self.get_button_product1_compare().click()\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"75f57a204f4395a7","name":"stdout","source":"75f57a204f4395a7.txt","type":"text/plain","size":29}],"parameters":[],"stepsCount":6,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1680473565394,"stop":1680473565468,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"flaky(reruns=2, reruns_delay=5)"},{"name":"suite","value":"test"},{"name":"host","value":"fv-az337-96"},{"name":"thread","value":"2372-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=2, reruns_delay=5)"]},"source":"4c9aba2f2e07b862.json","parameterValues":[]}